---
- name: Setup Chat App Server (Amazon Linux 2 - Node.js 16, Python 3.11, PM2, Logs)
  hosts: chat_server
  become: yes
  gather_facts: no

  vars:
    app_path: /home/ec2-user/chat-app/files

  pre_tasks:
    - name: Install build dependencies (raw)
      raw: |
        yum groupinstall -y "Development Tools"
        yum install -y gcc openssl-devel bzip2-devel libffi-devel wget make zlib-devel xz-devel rsync

    - name: Install Python 3.11 from source (raw)
      raw: |
        cd /usr/src
        rm -rf Python-3.11.9*
        wget https://www.python.org/ftp/python/3.11.9/Python-3.11.9.tgz
        tar xzf Python-3.11.9.tgz
        cd Python-3.11.9
        ./configure --enable-optimizations
        make -j$(nproc)
        make altinstall
        alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.11 1
        alternatives --set python3 /usr/local/bin/python3.11

    - name: Switch Ansible to use Python 3.11
      set_fact:
        ansible_python_interpreter: /usr/local/bin/python3.11

  tasks:
    - name: Gather facts using new Python
      setup:

    - name: Enable nginx1 via amazon-linux-extras
      shell: amazon-linux-extras enable nginx1
      args:
        executable: /bin/bash

    - name: Clean yum metadata
      shell: yum clean metadata
      args:
        executable: /bin/bash

    - name: Install Nginx
      shell: yum install -y nginx
      args:
        executable: /bin/bash

    - name: Configure NGINX reverse proxy for chat app
      copy:
        dest: /etc/nginx/conf.d/chat-app.conf
        content: |
          server {
              listen 80;
              server_name _;

              location / {
                  proxy_pass http://localhost:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }
          }
      notify: Reload NGINX

    - name: Install Node.js 16 from NodeSource
      shell: |
        curl -fsSL https://rpm.nodesource.com/setup_16.x | bash -
        while fuser /var/run/yum.pid >/dev/null 2>&1; do
          echo "Waiting for yum lock..."; sleep 3;
        done
        yum install -y nodejs
      args:
        executable: /bin/bash
      register: nodejs_output
      failed_when: false

    - name: Ensure npm is installed
      shell: npm -v
      register: npm_check
      failed_when: npm_check.rc != 0
      changed_when: false

    - name: Install pm2 globally
      shell: npm install -g pm2
      args:
        executable: /bin/bash

    - name: Create PM2 log directory
      file:
        path: /var/log/pm2
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Install rsync via shell
      shell: yum install -y rsync
      args:
        executable: /bin/bash

    - name: Ensure app_path exists
      file:
        path: "{{ app_path }}"
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Copy Node.js app to EC2 (fast rsync)
      ansible.posix.synchronize:
        src: ./files/
        dest: "{{ app_path }}"
        archive: yes
        recursive: yes
        compress: yes
        rsync_opts:
          - "--exclude=node_modules"
          - "--exclude=.git"
          - "--exclude=.vscode"
        rsync_path: "sudo rsync"
        mode: push
      delegate_to: localhost
      become: false

    - name: Install Node.js dependencies
      shell: |
        cd {{ app_path }}
        npm install
      args:
        executable: /bin/bash

    - name: Start Node.js app with PM2
      shell: |
        cd {{ app_path }}
        pm2 delete chat-app || true
        pm2 start app.js --name chat-app \
          --output /var/log/pm2/chat-app.out.log \
          --error /var/log/pm2/chat-app.err.log
      args:
        executable: /bin/bash

    - name: Configure PM2 to auto-start on system boot
      shell: |
        pm2 startup systemd -u ec2-user --hp /home/ec2-user
        pm2 save
      args:
        executable: /bin/bash

    - name: Enable and start NGINX
      service:
        name: nginx
        state: started
        enabled: yes

  handlers:
    - name: Reload NGINX
      service:
        name: nginx
        state: reloaded
